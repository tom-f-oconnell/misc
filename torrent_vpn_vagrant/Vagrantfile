
# TODO use command line args to make aliases for starting gui vs headless

# From Kannan Varadhan's answer at https://stackoverflow.com/questions/14124234
require 'getoptlong'

opts = GetoptLong.new(
  [ '--custom-option', GetoptLong::OPTIONAL_ARGUMENT ]
)

customParameter=''

opts.ordering=(GetoptLong::REQUIRE_ORDER)   ### this line.

# TODO TODO find way to specify boolean flag (no value following ideally)
# for toggling gui behavior
opts.each do |opt, arg|
  case opt
    # TODO TODO finish! (apply to gui case to start, maybe)
    # TODO or maybe add arg to pass script path in? or for memory?
    # TODO TODO for which version of ubuntu?
    when '--custom-option'
      customParameter=arg
  end
end

# TODO TODO modify vagrant so it uses my host ~/.bashrc, .bash_aliases, .vimrc
# (or all ~/.*rc / ~/.config/* ?? ) (with flag to not use any of my config)

# TODO anyway to get vagrant to print one line per command (just echoing the
# command) in either green or red based on exit code, rather than printing all
# output? (xtrace should accomplish former, but not suppress output)
$script = <<-SCRIPT
set -o xtrace

# The -E in most of the subsequent sudo calls is so this applies there
export DEBIAN_FRONTEND=noninteractive

# From: https://stackoverflow.com/questions/18878117
sudo -E apt-get update

# TODO what were these for?
sudo -E apt-get install -y virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11

# TODO what was purpose of this?
sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config

sudo VBoxClient --clipboard
sudo VBoxClient --draganddrop
# TODO delete/fix: "VBoxClient: error: unrecognized option '--display'"
# what was purpose of this one anyway?
# TODO was this replaced by --vmsvga? or do it want it anyway? what did it do before?
#sudo VBoxClient --display
sudo VBoxClient --checkhostversion
sudo VBoxClient --seamless

# Install and configure qbittorrent
sudo -E add-apt-repository -y ppa:qbittorrent-team/qbittorrent-stable
sudo -E apt-get update
sudo -E apt-get install -y qbittorrent

# TODO TODO actually configure correctly (to use mullvad interface only, and maybe also
# a specific ip[/range]) (currently just manually configured via the GUI after initial
# automated setup)
# TODO start automatically?

# TODO compare synced folder options in terms of i/o performance? switch to nfs?

sudo -E apt-get install -y ubuntu-unity-desktop

# TODO TODO fix this. gdm3 still seems to be selected after boot.
# Next several commands from: https://askubuntu.com/questions/1114525
##DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true dpkg-reconfigure lightdm
sudo DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true dpkg-reconfigure lightdm
sudo echo "/usr/sbin/lightdm" > /etc/X11/default-display-manager
# TODO maybe try just running as like `sudo sh -c "..."`
echo set shared/default-x-display-manager lightdm | sudo -E debconf-communicate

# Since I couldn't figure out how to configure lightdm correctly non-interactively while
# gdm3 was still installed...
sudo apt-get purge -y gdm3
sudo apt-get -y autoremove

sudo sh -c 'printf "[SeatDefaults]\nautologin-user=vagrant" > /etc/lightdm/lightdm.conf.d/12-autologin.conf'

# Install and set up Mullvad VPN
# https://mullvad.net/en/help/install-mullvad-app-linux/
wget --content-disposition --quiet https://mullvad.net/download/app/deb/latest
sudo -E apt-get install -y ./MullvadVPN-*.*_amd64.deb

mullvad account set `cat /vagrant/account`

# NOTE: each time you fully remake this box, a new key will be added (of the 5 maximum
# per mullvad account). You will need to revoke some here:
# https://mullvad.net/en/account/#/ports
#
# Multiple calls to regenerate on the same machine (that already has a key) seem to just
# change the key, updating its current entry visible in the website.
mullvad tunnel wireguard key regenerate

mullvad relay set tunnel-protocol wireguard

# TODO research / test this isn't causing other leaks
mullvad lan set allow

# TODO maybe move this + account setting + key regen into a script and call on trigger.
mullvad auto-connect set on
# TODO test this persists across reboots + actually blocks all traffic
mullvad always-require-vpn set on

# TODO TODO configure qbittorrent to start / autostart here (after mullvad connection
# established)

sudo service lightdm start

SCRIPT


Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  config.ssh.forward_agent = true

  # Want to cd there because that directory is by default synced with
  # directory of this Vagrant file.
  # https://stackoverflow.com/questions/17864047
  config.ssh.extra_args = ["-t", "cd /vagrant; bash --login"]

  config.vm.provider "virtualbox" do |v|
    # Default seemed to be ~1Gb
    v.memory = 8192
    v.cpus = 4

    v.linked_clone = true

    # TODO try to expose these as command line arg
    v.gui = true
    v.customize ['modifyvm', :id, '--clipboard', 'bidirectional']
  end

  # TODO toggle w/ rest of gui by some gui clarg
  config.vm.provision "shell", inline: $script

  # neither of these answers from here seemed to work (w/ rel symlink at least):
  # https://stackoverflow.com/questions/24200333

  # 1
  #config.vm.provider "virtualbox" do |v|
  #    v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"]
  #end

  # 2
  #config.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__args: ["--verbose", "--archive", "--delete", "-z"]
  

  config.trigger.before :up do |trigger|
    trigger.name = "write mullvad account"

    # TODO replace w/ some kind of argument to the provisioning script above?

    # LHS rather than just `mullvad account get | ...` b/c doing that led to some weird
    # rust panic error about a broken stdout pipe. This change makes LHS output all be
    # on one line though.
    # TODO chmod/chown the account file to match default permissions/owners for ssh keys
    # TODO should i generate a key host side and copy that over? (to persist across the
    # box being destroyed)? might be necessary if i want to set up port forwarding or
    # something through mullvads online interface. otherwise, i'm not sure it would be
    # helpful (unless you can only have a finite number of keys associated with an
    # account or something, rather than just concurrent active connections).
    #
    # This and a few variations on this didn't seem to work, yet same in a script does.
    #trigger.run = {inline: "echo `mullvad account get` | cut -d " " -f 3 > account"}
    trigger.run = {path: "write_account.sh"}
  end

  config.trigger.after :up do |trigger|
    trigger.name = "set mullvad account"
    trigger.run_remote = {inline: "mullvad account set `cat /vagrant/account` && rm /vagrant/account"}
  end
end
